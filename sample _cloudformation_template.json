{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This is template for activity 2",
    "Parameters": {
        "vpccidr": {
            "Description": "This is cidr for vpc",
            "Type": "String",
            "Default": "192.168.0.0/16"
        },
        "subnetcidrranges": {
            "Description": "Cidr ranges for subnet",
            "Type": "List<String>",
            "Default": "192.168.0.0/24,192.168.1.0/24,192.168.2.0/24,192.168.3.0/24"
        },
        "web1Az": {
            "Description": "AZ of the Web1 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "web2Az": {
            "Description": "AZ of the Web2 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "db1Az": {
            "Description": "AZ of the db1 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "db2Az": {
            "Description": "AZ of the db2 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "dbSize": {
            "Description": "Size of the database",
            "Type": "String",
            "Default": "20"
        },
        "dbInstanceSize": {
            "Description": "Size of the Datbase Instance",
            "Type": "String",
            "Default": "db.t2.micro"
        },
        "backupPeriodInDays": {
            "Description": "Backup Period in Days",
            "Type": "Number",
            "Default": 0
        },
        "dbServerName": {
            "Description": "Name of the rds instance",
            "Type": "String",
            "Default": "qtcommerce"
        },
        "dbName": {
            "Description": "Name of the rds database",
            "Type": "String",
            "Default": "qtecomm"
        },
        "dbUserName": {
            "Description": "UserName of the database",
            "Type": "String",
            "Default": "admin"
        },
        "dbPassword": {
            "Description": "Password for the database",
            "Type": "String",
            "Default": "adminadmin"
        },
        "isMultiAz": {
            "Description": "Whether you need multi az or not",
            "Type": "String",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "keypair": {
            "Description": "key pair for ec2 instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "webInstanceType": {
            "Description": "instance type for the web ec2",
            "Type": "String",
            "Default": "t2.micro"
        }
    },
    "Mappings": {
        "imageIdMap": {
            "us-east-1": {
                "ubuntu20": "ami-04505e74c0741db8d"
            },
            "us-east-2": {
                "ubuntu20": "ami-0fb653ca2d3203ac1"
            },
            "us-west-1": {
                "ubuntu20": "ami-01f87c43e618bf8f0"
            },
            "us-west-2": {
                "ubuntu20": "ami-0892d3c7ee96c0bf7"
            },
            "ap-south-1": {
                "ubuntu20": "ami-0851b76e8b1bce90b"
            }
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Ntier"
                    }
                ]
            }
        },
        "web1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "web1Az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "subnetcidrranges"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Web1"
                    }
                ]
            }
        },
        "web2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "web2Az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "subnetcidrranges"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Web2"
                    }
                ]
            }
        },
        "db1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db1Az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Ref": "subnetcidrranges"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Db1"
                    }
                ]
            }
        },
        "db2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db2Az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Ref": "subnetcidrranges"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Db2"
                    }
                ]
            }
        },
        "ntierigw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier-igw"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "InternetGatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "publicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "publicrt"
                    }
                ]
            }
        },
        "web1rtassociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web1"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "web2rtassociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web2"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "toIgw": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "privateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "privatert"
                    }
                ]
            }
        },
        "db1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "db1"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                }
            }
        },
        "db2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "db2"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable"
                }
            }
        },
        "websg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "open http and ssh",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "opensshnhttp"
                    }
                ]
            }
        },
        "mysqlsg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "-",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mysqlsg"
                    }
                ]
            }
        },
        "ntierdbsubnetgroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "DBsubnet group for db",
                "SubnetIds": [
                    {
                        "Ref": "db1"
                    },
                    {
                        "Ref": "db2"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierdbsubnetgroup"
                    }
                ]
            }
        },
        "mysqlinstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": {
                    "Ref": "dbSize"
                },
                "DBInstanceClass": {
                    "Ref": "dbInstanceSize"
                },
                "AllowMajorVersionUpgrade": "false",
                "AutoMinorVersionUpgrade": "false",
                "BackupRetentionPeriod": {
                    "Ref": "backupPeriodInDays"
                },
                "DBInstanceIdentifier": {
                    "Ref": "dbServerName"
                },
                "DBName": "qtecomm",
                "DBSubnetGroupName": {
                    "Ref": "ntierdbsubnetgroup"
                },
                "Engine": "mysql",
                "MasterUsername": {
                    "Ref": "dbUserName"
                },
                "MasterUserPassword": {
                    "Ref": "dbPassword"
                },
                "MultiAZ": {
                    "Ref": "isMultiAz"
                },
                "PubliclyAccessible": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierdb"
                    }
                ],
                "VPCSecurityGroups": [
                    {
                        "Ref": "mysqlsg"
                    }
                ]
            }
        },
        "web1ec2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "keypair"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "imageIdMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "ubuntu20"
                    ]
                },
                "InstanceType": {
                    "Ref": "webInstanceType"
                },
                "Monitoring": "false",
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": true,
                        "DeleteOnTermination": true,
                        "DeviceIndex": 0,
                        "GroupSet": [
                            {
                                "Ref": "websg"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "web1"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web1"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "vpcId": {
            "Value": {
                "Ref": "ntiervpc"
            }
        },
        "web1InstanceId": {
            "Value": {
                "Ref": "web1ec2"
            }
        },
        "webPublicIp": {
            "Value": {
                "Fn::GetAtt": [
                    "web1ec2",
                    "PublicIp"
                ]
            }
        },
        "dbEndPoint": {
            "Value": {
                "Fn::GetAtt": [
                    "mysqlinstance",
                    "Endpoint.Address"
                ]
            }
        }
    }
}